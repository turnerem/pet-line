TODO, ordered by nextness
- put line on rect. Make rect move and add filter to it. Flip slop of line
  when direction changes
- add buttons to increase/decreasae hunger, energy, etc. For testing.
- think of mood updater given owner action. This could be a switch on owner
  action. This is probably preferable: having all owner-influenced mood
  updating in just one function
  - ditto for mood updating given want X

how to manage the coordinates of the line? Coordinates are needed to
initialise line loc. Then x is updated based on movement. Need a custom hook
for managing movement (x)?

Some variables are required everywhere: svgDims, pet characteristics, pet loc,
foodbowl loc, foodbowl dims

28oct20:
- how do action to watch tv, wantsTv, and other telly stuff fit together? Need one function that is called periodically to check whether line wants tv, whether it's currently watching it, take action accordingly, and update mood
- pet must choose between things when it has multiple wants. So create a
  priority function
- separate out mood from state. State is watchingTv, walking, sleeping, etc


bash being helpful:
Don't try to install it manually: your package manager does it automatically.
However, a different version of babel-jest was detected higher up in the tree:

  /Users/emilyturner/Documents/SideHustlin/pet-line/node_modules/babel-jest (version: 26.5.2)

Manually installing incompatible versions is known to cause hard-to-debug issues.

If you would prefer to ignore this check, add SKIP_PREFLIGHT_CHECK=true to an .env file in your project.
That will permanently disable this message but you might encounter other issues.

To fix the dependency tree, try following the steps below in the exact order:

  1. Delete package-lock.json (not package.json!) and/or yarn.lock in your project folder.
  2. Delete node_modules in your project folder.
  3. Remove "babel-jest" from dependencies and/or devDependencies in the package.json file in your project folder.
  4. Run npm install or yarn, depending on the package manager you use.

In most cases, this should be enough to fix the problem.
If this has not helped, there are a few other things you can try:

  5. If you used npm, install yarn (http://yarnpkg.com/) and repeat the above steps with it instead.
     This may help because npm has known issues with package hoisting which may get resolved in future versions.

  6. Check if /Users/emilyturner/Documents/SideHustlin/pet-line/node_modules/babel-jest is outside your project directory.
     For example, you might have accidentally installed something in your home folder.

  7. Try running npm ls babel-jest in your project folder.
     This will tell you which other package (apart from the expected react-scripts) installed babel-jest.

If nothing else helps, add SKIP_PREFLIGHT_CHECK=true to an .env file in your project.
That would permanently disable this preflight check in case you want to proceed anyway.

P.S. We know this message is long but please read the steps above :-) We hope you find them helpful!

Waiting for the debugger to disconnect...
Waiting for the debugger to disconnect...
